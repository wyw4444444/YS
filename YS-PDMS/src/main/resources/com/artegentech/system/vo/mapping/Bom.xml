<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.artegentech.system.dao.IBomDAO">
	<cache />
	<select id="getMaxVersionByPart_code_up" parameterType="String" resultType="Bom" flushCache="true">
		SELECT part_code_up,MAX(ver) as ver,status,locked FROM tblbom
		<where>
			<if test="_parameter != null">
				 part_code_up = #{part_code_up}
			</if>
		</where>
	</select>
	
	
	<insert id="doCreate" parameterType="Bom" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO tblbom(part_code_up,part_code_down,dosage,base,unit,ver,status,locked)
		VALUES(#{part_code_up},#{part_code_down},#{dosage},#{base},#{unit},#{ver},#{status},#{locked});
	</insert>
	
	
	
	<select id="findAwaitCheckSplit" parameterType="java.util.Map" resultType="Bom">
		SELECT * FROM tblbom WHERE status=1 GROUP BY part_code_up
		ORDER BY id  ASC;
	</select>
	
	<select id="findAwaitRehandleSplit" parameterType="java.util.Map" resultType="Bom">
		SELECT * FROM tblbom WHERE status=2 or status=3 GROUP BY part_code_up
		ORDER BY id  ASC;
	</select>
	
	<update id="doUpdateStatus" parameterType="Bom">
		UPDATE tblbom SET status=#{status} WHERE part_code_up=#{part_code_up} AND ver=#{ver};
	</update>
	
	<select id="findById" resultType="Bom" parameterType="Integer">
		SELECT * FROM tblbom WHERE id=#{id};
	</select>

	<select id="getByPart_code_upAndVer" parameterType="java.util.Map" resultType="Bom">
		SELECT * FROM tblbom WHERE   part_code_up=#{part_code_up} AND ver=#{ver}
		ORDER BY id  ASC;
	</select>
	
	<update id="doUpdate" parameterType="Bom">
		UPDATE tblbom SET part_code_down=#{part_code_down},dosage=#{dosage},base=#{base},unit=#{unit},status=#{status}
		,locked=#{locked} WHERE id=#{id};
	</update>
	
	<update id="doDelete" parameterType="Bom">
		DELETE FROM tblbom  WHERE id=#{id};
	</update>
	<select id="findAllPart_code_up"  resultType="Bom">
		SELECT * FROM tblbom where  locked=0  GROUP BY part_code_up order by part_code_up ASC;
	</select>

	<select id="findByPart_code_up" parameterType="String" resultType="Bom">
		SELECT * FROM tblbom where part_code_up = #{part_code_up} AND ver=
		(SELECT max(ver) FROM tblbom where part_code_up = #{part_code_up} And locked=0 AND status=5);
	</select>
	
	<select id="findAllPart_code_upAll"  resultType="Bom">
		SELECT * FROM tblbom  GROUP BY part_code_up order by part_code_up ASC;
	</select>
	
	<select id="findByPart_code_upAll" parameterType="String" resultType="Bom">
		SELECT * FROM tblbom where part_code_up = #{part_code_up} AND ver=
		(SELECT max(ver) FROM tblbom where part_code_up = #{part_code_up} AND status=5);
	</select>

	<select id="findAllVerByPart_code_up" parameterType="String" resultType="Bom">
		SELECT * FROM tblbom where part_code_up = #{part_code_up} And locked=0 AND status=5
		ORDER BY  ver DESC ,part_code_down ASC;
	</select>
	
	<update id="doUpdateLock" parameterType="Bom">
		UPDATE tblbom SET locked=#{locked} WHERE part_code_up=#{part_code_up};
	</update>
	
	
<!-- 	
	<select id="findByCode" resultType="PartInfo" parameterType="String">
		SELECT * FROM tblpartinfo WHERE part_code=#{part_code} AND status!=4;
	</select>
	
	
	
	<select id="findAwaitCheckSplit" parameterType="java.util.Map" resultType="PartInfo">
		SELECT * FROM tblpartinfo WHERE status=1
		ORDER BY id ASC;
	</select>
	
	<select id="findAwaitRehandleSplit" parameterType="java.util.Map" resultType="PartInfo">
		SELECT * FROM tblpartinfo WHERE status=2 or status=3
		ORDER BY id ASC;
	</select>
	
	
	<update id="doUpdateStatus" parameterType="PartInfo">
		UPDATE tblpartinfo SET status=#{status} WHERE id=#{id};
	</update>
	
	
	<select id="findById" resultType="PartInfo" parameterType="Integer">
		SELECT * FROM tblpartinfo WHERE id=#{id};
	</select>
	
	<update id="doUpdate" parameterType="PartInfo">
		UPDATE tblpartinfo SET tradename=#{tradename},spec=#{spec},unit=#{unit},loss=#{loss},
		prop1=#{prop1},prop2=#{prop2},prop3=#{prop3},prop4=#{prop4},prop5=#{prop5},
		status=#{status},locked=#{locked} WHERE id=#{id};
	</update>
	
	
	<select id="getAllUnlockedCount" parameterType="java.util.Map" resultType="Long">
		SELECT COUNT(*) FROM tblpartinfo
		WHERE locked=0 and status=5
			<if test="part_code != null">
				AND	part_code LIKE #{part_code}
			</if>
			<if test="tradename != null">
				AND tradename LIKE #{tradename}
			</if>
			<if test="spec != null">
				AND spec LIKE #{spec}
			</if>
			<if test="prop != null">
				AND (prop1 LIKE #{prop} or prop2 LIKE #{prop} or prop3 LIKE #{prop} or prop4 LIKE #{prop} or prop5 LIKE #{prop})
			</if>
	</select>
	
	<select id="findAllUnlockedSplit" parameterType="java.util.Map" resultType="PartInfo">
		SELECT * FROM tblpartinfo
		WHERE locked=0 and status=5
			<if test="part_code != null">
				AND	part_code LIKE #{part_code}
			</if>
			<if test="tradename != null">
				AND tradename LIKE #{tradename}
			</if>
			<if test="spec != null">
				AND spec LIKE #{spec}
			</if>
			<if test="prop != null">
				AND (prop1 LIKE #{prop} or prop2 LIKE #{prop} or prop3 LIKE #{prop} or prop4 LIKE #{prop} or prop5 LIKE #{prop})
			</if>
		ORDER BY id ASC
		LIMIT #{start},#{lineSize};
	</select>
	
	<select id="getAllCount" parameterType="java.util.Map" resultType="Long">
		SELECT COUNT(*) FROM tblpartinfo WHERE  status=5
			<if test="part_code != null">
				AND	part_code LIKE #{part_code}
			</if>
			<if test="tradename != null">
				AND tradename LIKE #{tradename}
			</if>
			<if test="spec != null">
				AND spec LIKE #{spec}
			</if>
			<if test="prop != null">
				AND (prop1 LIKE #{prop} or prop2 LIKE #{prop} or prop3 LIKE #{prop} or prop4 LIKE #{prop} or prop5 LIKE #{prop})
			</if>
	</select>
	
	<select id="findAllSplit" parameterType="java.util.Map" resultType="PartInfo">
		SELECT * FROM tblpartinfo WHERE status=5
			<if test="part_code != null">
				AND	part_code LIKE #{part_code}
			</if>
			<if test="tradename != null">
				AND tradename LIKE #{tradename}
			</if>
			<if test="spec != null">
				AND spec LIKE #{spec}
			</if>
			<if test="prop != null">
				AND (prop1 LIKE #{prop} or prop2 LIKE #{prop} or prop3 LIKE #{prop} or prop4 LIKE #{prop} or prop5 LIKE #{prop})
			</if>
		ORDER BY id ASC
		LIMIT #{start},#{lineSize};
	</select> -->
	
	
	
</mapper>